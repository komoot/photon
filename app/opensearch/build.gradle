plugins {
  id 'com.github.johnrengelman.shadow' version '8.1.1'
  id 'application'
  id 'jacoco'
  id 'org.sonarqube' version '5.1.0.4882'
}

apply from: rootProject.file('buildSrc/shared.gradle')

description = "Geocoder for OSM data (OpenSearch-based version)"

sourceSets {
    test {
        java {
            srcDir 'src/test/java'
        }
    }
}

dependencies {
    implementation 'org.opensearch.client:opensearch-java:2.18.0'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'

    implementation('org.codelibs.opensearch:opensearch-runner:2.18.0.0') {
        exclude(module: 'repository-url')
        exclude(module: 'reindex-client')
        exclude(module: 'rank-eval-client')
        exclude(module: 'percolator-client')
        exclude(module: 'parent-join-client')
        exclude(module: 'mapper-extras-client')
        exclude(module: 'opensearch-scripting-painless-spi')
        exclude(module: 'lang-painless')
        exclude(module: 'lang-mustache-client')
        exclude(module: 'lang-expression')
        exclude(module: 'ingest-user-agent')
        exclude(module: 'ingest-common')
        exclude(module: 'aggs-matrix-stats-client')
        exclude(module: 'lucene-grouping')
    }

    // updates for indirect dependencies
    implementation 'io.netty:netty-codec:4.1.115.Final'
    implementation 'io.netty:netty-codec-http:4.1.115.Final'
}

tasks.named('jar') {
    archiveBaseName.set('original-photon-opensearch')
    manifest.attributes('Multi-Release': 'true')
}

shadowJar {
    mergeServiceFiles()
    destinationDirectory.set(rootProject.file('target'))
    archiveBaseName.set('photon-opensearch')
    archiveClassifier.set('')

    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)

    exclude '**/module-info.class'

    // This mitigates against the log4j JNDI lookup vulnerability:
    // https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228
    // Since we are using an old version of elastic search that is incompatible
    // with a patched, newer version of log4j we have to remove the class
    // JndiLookup from the fat jar. This is the recommended course of action
    // when you cannot upgrade as per https://logging.apache.org/log4j/2.x/security.html
    exclude 'org/apache/logging/log4j/core/lookup/JndiLookup.class'
}
