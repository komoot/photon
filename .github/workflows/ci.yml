name: CI

on:
  push:
  pull_request:

jobs:
  build:

    name: Compile project and run tests (Java ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java:
          - 8
          - 11

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Fetch cached Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: maven-deps

      - name: Compile project, run tests
        run: |
          mvn --no-transfer-progress test


  import:
    name: Import OSM data from Nominatim into Photon
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Fetch cached Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: maven-deps

      - name: Compile project
        run: |
          mvn --no-transfer-progress package -Dmaven.test.skip=true

      - uses: actions/checkout@v2
        with:
          repository: osm-search/Nominatim
          submodules: true
          path: Nominatim

      - name: Get Date
        id: get-date
        run: |
            echo "::set-output name=date::$(/bin/date -u "+%Y%W")"
        shell: bash

      - uses: actions/cache@v2
        with:
            path: |
               Nominatim/data/country_grid.sql.gz
            key: nominatim-test-data-${{ steps.get-date.outputs.date }}

      - name: Setup database
        run: |
            echo 'fsync = off' | sudo tee /etc/postgresql/13/main/conf.d/local.conf
            echo 'synchronous_commit = off' | sudo tee -a /etc/postgresql/13/main/conf.d/local.conf
            echo 'full_page_writes = off' | sudo tee -a /etc/postgresql/13/main/conf.d/local.conf
            echo 'shared_buffers = 512MB' | sudo tee -a /etc/postgresql/13/main/conf.d/local.conf
            sudo systemctl start postgresql
            sudo -u postgres createuser -S www-data
            sudo -u postgres createuser -s runner
            psql -d postgres -c "ALTER USER runner PASSWORD 'foobar'"
            psql --version
            psql -d postgres -c "SELECT version()"
        shell: bash

      - name: Install prerequisits
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y -qq libboost-system-dev libboost-filesystem-dev libexpat1-dev zlib1g-dev libbz2-dev libpq-dev libproj-dev python3-psycopg2 python3-pyosmium python3-dotenv python3-psutil python3-jinja2 python3-icu postgresql-server-dev-13 postgresql-13-postgis-3
        shell: bash

      - name: Download dependencies
        run: |
            if [ ! -f Nominatim/data/country_osm_grid.sql.gz ]; then
                wget --no-verbose -O Nominatim/data/country_osm_grid.sql.gz https://www.nominatim.org/data/country_grid.sql.gz
            fi
        shell: bash

      - name: Build Nominatim
        run: mkdir build && cd build && cmake ../Nominatim && make -j2 && sudo make install
        shell: bash

      - name: Prepare import environment
        run: |
            # get the first day of the previous month to make sure that there really are updates to apply
            # Geofabrik stores snapshot from the first of the month for up to 3 month
            two_months_ago=`date --date="1 months ago" +%y%m01`
            if [ ! -f monaco.osm.pbf ]; then
                wget --no-verbose https://download.geofabrik.de/europe/monaco-${two_months_ago}.osm.pbf -O monaco.osm.pbf
            fi
            mkdir data-env
            cd data-env
        shell: bash

      - name: Import Nominatim
        run: |
          nominatim import --osm-file ../monaco.osm.pbf --reverse-only
          nominatim admin --check-database
        shell: bash
        working-directory: data-env

      - name: Import Photon
        run: |
            java -jar target/photon-*.jar -nominatim-import -database nominatim -user runner -password foobar

      - name: Update Nominatim
        run: |
          nominatim replication --init
          nominatim replication --no-index --once
        shell: bash
        working-directory: data-env

      - name: Update Photon
        run: |
          java -jar target/photon-*.jar -nominatim-update -database nominatim -user runner -password foobar
